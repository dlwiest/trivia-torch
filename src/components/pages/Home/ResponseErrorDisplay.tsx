interface ResponseErrorDisplayProps {
    errorType: string;
}

const RobotIcon = (props: React.ComponentPropsWithoutRef<'svg'>) => {
    return (
        <svg width="1200pt" height="1200pt" version="1.1" viewBox="0 0 1200 1200" xmlns="http://www.w3.org/2000/svg" {...props}>
            <g>
                <path d="m433.08 851.4c39.602 26.641 35.16 9.6016 40.68 3.9609 32.879-33.359 76.801-56.039 124.92-54.961h10.199l8.8789 0.60156c5.7617 0.60156 11.52 1.3203 17.16 2.6406 11.281 2.5195 22.199 6.6016 32.16 12.238 19.922 11.039 35.879 28.801 43.68 49.199 3.9609 9.4805 6.8398 22.078 57.121-10.68 41.16-27.121 23.641-42.84 13.559-53.398-22.32-25.078-51.48-43.68-82.68-54.84-15.602-5.6406-31.68-9.6016-48-11.879-8.1602-1.0781-16.32-1.9219-24.48-2.2812-7.9219-0.35938-17.039-0.35938-23.039-0.35938-6.2383 0-15.48 0-23.879 0.60156-8.5195 0.60156-16.922 1.8008-25.441 3.2383-16.801 3.1211-33.238 8.1602-48.961 15-31.32 13.559-59.641 34.32-81.719 60.238-7.0781 8.1602-27 15.84 9.7188 40.68z" />
                <path d="m455.28 519.84c-49.559-35.039-111.12 29.641-70.441 75.961 53.039 65.16 141.6-38.52 70.441-75.961z" />
                <path d="m807.36 519.84c-49.559-35.039-111.12 29.641-70.441 75.961 53.039 65.16 141.6-38.52 70.441-75.961z" />
                <path d="m120 988.8c12.719 31.199 33.961 58.801 58.801 80.641 12.719 11.039 27 20.641 42.121 28.68 15.238 7.8008 30.961 13.559 46.801 18.121 31.559 8.5195 62.398 11.52 91.68 13.32 29.398 1.8008 57.602 2.2812 85.559 3.3594l84.238 2.8789c104.88 3.8398 256.92 8.3984 253.44-51.602-2.7617-49.199-146.52-43.68-243.36-43.922l-164.16-0.35938c-26.52-0.35938-51.602-1.8008-74.039-5.7617-22.441-4.1992-41.398-11.16-57.84-22.32-8.1602-5.6406-16.199-12.238-23.281-19.922-7.3203-7.4414-13.078-15.602-18.238-24.121-10.078-17.039-16.199-37.559-19.801-60.84-6.6016-46.922-4.6797-103.32-5.5195-158.28l-1.1992-165.12c-0.23828-54.84-1.6797-108.72 11.16-150.36 6.6016-20.641 16.68-38.16 31.559-53.762 7.3203-7.8008 15.359-14.879 24-20.52 8.5195-6 17.762-10.441 27.84-14.281 39.961-15.238 93.602-14.879 148.2-15h345.12c57.48 0.35938 115.08-1.9219 159.96 10.559 11.281 3 21.48 7.1992 30.961 12.48 9.6016 5.0391 18.359 11.52 26.52 19.078 16.922 15.359 29.16 33.121 36.961 54 15.84 41.879 14.641 98.398 14.879 155.64v172.56l-0.12109 85.68c-0.35938 27.84-1.6797 54.719-6 78.719-4.4414 24.121-12.238 44.641-24.84 62.398-12.961 17.762-30.238 33.719-49.199 43.441-12.719 6.7188-28.559 11.52-46.32 14.398-17.762 2.8789-36.961 4.3203-54.84 6.3594-36 3.8398-65.762 11.398-68.039 33.602-2.5195 23.641 25.199 32.879 64.078 34.441 19.441 0.71875 41.879-0.71875 64.32-4.9219 22.441-4.0781 44.879-11.281 63.359-19.922 14.52-6.7188 28.559-15 40.922-25.078 12.602-9.8398 23.879-21 33.84-33.48 20.52-24.719 34.199-55.32 41.16-85.441 7.1992-30.359 9.1211-60 10.078-88.922 0.83984-28.922 0.60156-57 0.71875-85.078l0.23828-168.72c0-28.078 0.23828-56.281-0.71875-85.199-0.83984-28.922-3.2383-58.801-10.68-89.281-3.9609-15.121-9.2383-30.359-16.32-44.879-7.3203-14.398-16.199-28.078-26.52-40.441-20.52-24.121-46.559-44.879-76.32-57.602-29.52-12.961-60.719-18.359-90.121-20.879-29.641-2.5195-58.32-2.5195-86.641-2.5195h-143.04c-0.35938-28.68-5.8789-57.238-5.8789-85.922 0-33 0.23828-65.879-0.23828-98.879 0-5.3984 11.762-13.441-32.398-13.801-47.762-0.35938-34.32 8.0391-34.922 13.199-6.6016 61.801 9.1211 123.6-18.359 185.4h-102.72c-28.199 0-56.16-0.23828-84.961 0.23828-28.68 0.48047-58.32 1.9219-88.68 7.8008-15.121 3-30.359 7.4414-45.359 13.441-14.879 6.1211-29.16 14.281-42.359 23.52-25.801 19.199-47.762 43.32-63 72.359-15.238 28.801-22.68 60.359-26.281 90.121-3.7188 30-4.1992 58.922-4.6797 87.359l-2.0391 168.84-1.1992 84.359c-0.35938 28.199-0.83984 57.121 1.3203 87.121 2.0391 29.879 7.0781 61.922 20.16 92.879z" />
            </g>
        </svg>
    );
};

const getErrorMessage = (errorType: string) => {
    switch (errorType) {
        case 'invalid_topic':
            return "The computer couldn't understand the topic you supplied. Please check your spelling and consider adding clarifying information, e.g. if you're looking for questions about the TV series Carnivale, try \
            \"Carnivale (Series).\"";
        case 'invalid_request_error':
            return "The OpenAI API key you supplied is invalid. Please verify that the key is correct and is still active.";
        default:
            return "And we're having trouble placing what. It's like the OpenAI servers are struggling or down at the moment. Please try again soon.";
    }
};

const ResponseErrorDisplay = ({ errorType }: ResponseErrorDisplayProps) => {
    if (!errorType) {
        return;
    }

    return (
        <div>
            <div className="flex flex-col mb-4 items-center">
                <div className="mb-2"><RobotIcon className="h-32 w-32 fill-red-600 dark:fill-red-500" /></div>
                <h2 className="text-2xl mb-4">Something went wrong...</h2>
                <p className="text-sm text-center">{getErrorMessage(errorType)}</p>
            </div>
        </div>
    );
};

export default ResponseErrorDisplay;
